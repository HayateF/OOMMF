# MIF 2.1
# MIF Example File: exchspring.mif
# Description: Exchange spring example
set pi [expr {4*atan(1.0)}]
set mu0 [expr {4*$pi*1e-7}]

# Duration of magnetic field from 0 Oe to $amp Oe in second
Parameter duration 1e-9

# Max amplitude of magnetic field in Oe
Parameter amp -1e6
# Convert field amplitude from Oe to A/m
set amp [expr {$amp*80}]

Specify Oxs_MultiAtlas:atlas {
  atlas { Oxs_BoxAtlas:cfb {
       xrange {0 30e-6}
       yrange {0 5e-6}
       zrange {0 5e-9}
	   name cfb
  } }
}

Specify Oxs_RectangularMesh:mesh {
  cellsize {5e-7 5e-7 1e-9}
  atlas :atlas
}

Specify Oxs_Exchange6Ngbr:CoFeBW {
  atlas :atlas
  default_A 1.5e-11
  A {
    cfb cfb 1.5e-11
  }
}


#You have to examine the accurate value of CoFeB axial anisotropy.
Specify Oxs_UniaxialAnisotropy {
  Ha { Oxs_AtlasScalarField {
    atlas :atlas
    values {
	cfb 4e5
    }
  }}
  axis { Oxs_UniformVectorField {
    norm 1
    vector {1 0 0}
  } }
}
# Ha is anisotropy field in A / m
#  K1 { Oxs_AtlasScalarField {
#    atlas :atlas
#    values {
#	cfb 520e3
#    }
#  }}


Specify Oxs_UZeeman [subst {
  multiplier 80
  Hrange {
     {0 0 -1000 0 0 -1000 0}
  }
}]
#  multiplier [expr {0.001/$mu0}]

# Specify Oxs_ScriptUZeeman {
#	multiplier 1
#	script_args total_time
#	script KillField
# }
#
# proc KillField { total_time } {
#	global amp duration
#	set Hz [expr {$amp*$total_time/$duration}]
#	set dHz [expr {$amp/$duration}]
#	return [list 0 0 $Hz 0 0 $dHz]
# }


# alpha is 0.05 experimentally, but for simulation 0.5 is appropriate in terms of convergence.
 Specify Oxs_RungeKuttaEvolve:evolver {
	do_precess 1
	gamma_G 2.211e5
	alpha 0.05
	method rkf54s
 }

Specify Oxs_Demag {}


Specify Oxs_TimeDriver {
 basename cfbw_b_drive
 evolver :evolver 
 vector_field_output_format {binary 4}
 scalar_output_format %.15g
 stopping_dm_dt 0.01
 stage_count 1
 mesh :mesh
 Ms  { Oxs_AtlasScalarField {
     atlas :atlas
     values {
        cfb 1000e3
     }
 }}
 m0 { Oxs_ScriptVectorField {
    script DomainWall
    atlas :atlas
    script_args {relpt}
  }}
}

# make Domain Wall
proc DomainWall {xrel yrel zrel} {
    if {$xrel<0.3} {
        return [list 0 0 1]
    } elseif {$xrel>0.5} {
        return [list 0 0 1]
    } else {
        return [list 0 0 -1]
    }
}

#Destination archive mmArchive
Destination disp mmDisp
#Schedule Oxs_TimeDriver::Magnetization archive step 100
#Schedule Oxs_TimeDriver::Magnetization archive stage 1
Schedule Oxs_TimeDriver::Magnetization disp step 100
